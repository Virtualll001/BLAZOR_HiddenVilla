@page "/hotel-room/create"
@page "/hotel-room/edit/{Id:int}"
@using Models
@using Business.Repository.IRepository
@inject IHotelRoomRepository HotelRoomRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<div class="row mt-3 mb-5">
    <h3 class="card-title text-info mb-3 ml-3">@Title nový pokoj</h3>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <EditForm Model="HotelRoomModel" OnValidSubmit="HandleHotelRoomUpsert">
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    @*<ValidationSummary />*@
                    <div class="form-group my-3">
                        <label>Jméno</label>
                        <InputText @bind-Value="HotelRoomModel.Name" class="form-control"></InputText>
                        <ValidationMessage For="()=>HotelRoomModel.Name"></ValidationMessage>
                    </div>
                    <div class="form-group my-3">
                        <label>Obsazenost</label>
                        <InputNumber @bind-Value="HotelRoomModel.Occupancy" class="form-control"></InputNumber>
                        <ValidationMessage For="()=>HotelRoomModel.Occupancy"></ValidationMessage>
                    </div>
                    <div class="form-group my-3">
                        <label>Běžná sazba</label>
                        <InputNumber @bind-Value="HotelRoomModel.RegularRate" class="form-control"></InputNumber>
                        <ValidationMessage For="()=>HotelRoomModel.RegularRate"></ValidationMessage>
                    </div>
                    <div class="form-group my-3">
                        <label>Plocha</label>
                        <InputText @bind-Value="HotelRoomModel.SqFt" class="form-control"></InputText>
                    </div>
                    <div class="form-group my-3">
                        <label>Detaily</label>
                        <InputTextArea @bind-Value="HotelRoomModel.Details" class="form-control"></InputTextArea>
                    </div>
                    <div class="form-group my-3">
                        <button class="btn btn-primary">@Title pokoj</button>
                        <NavLink href="hotel-room" class="btn btn-secondary">Zpět na seznam</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public int? Id { get; set; }

    private HotelRoomDTO HotelRoomModel { get; set; } = new HotelRoomDTO();
    private string Title { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id != null) //update
        {
            Title = "Upravit";
            HotelRoomModel = await HotelRoomRepository.GetHotelRoom(Id.Value);
        }
        else //create
        {
            Title = "Vytvořit";
            HotelRoomModel = new HotelRoomDTO();
        }
    }

    private async Task HandleHotelRoomUpsert()
    {
        try
        {
            var roomDetailsByName = await HotelRoomRepository.IsRoomUniqe(HotelRoomModel.Name, HotelRoomModel.Id);
            if (roomDetailsByName != null)
            {
                //duplicate room = error
                await JsRuntime.ToastrError("Takový pokoj již existuje.");
                return;
            }

            if (HotelRoomModel.Id != 0 && Title == "Upravit")
            {
                //update
                var updateRoomResult = await HotelRoomRepository.UpdateHotelRoom(HotelRoomModel.Id, HotelRoomModel);
                await JsRuntime.ToastrSuccess("Hotelový pokoj byl úspěšně aktualizován.");
            }
            else
            {
                //create
                var createdResult = await HotelRoomRepository.CreateHotelRoom(HotelRoomModel);
                await JsRuntime.ToastrSuccess("Hotelový pokoj byl úspěšně přidán.");
            }
        }
        catch (Exception ex)
        {

        }

        NavigationManager.NavigateTo("hotel-room");
    }
}
